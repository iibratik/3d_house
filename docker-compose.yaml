services:
  app:
    build:
      context: ./backend/laravel
      dockerfile: ../../docker/dockerfiles/laravel/Dockerfile
    image: laravel-app
    container_name: laravel-app
    volumes:
      - ./backend:/var/www
    ports:
      - 9000:9000
    networks:
      - laravel
  nginx:
    image: "nginx:stable-alpine"
    ports:
      - "8000:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./backend:/var/www
    depends_on:
      - app
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    ports:
      - "3316:3306"
    env_file:
      - docker/env/mysql.env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel

  frontend:
    build:
      context: .
      dockerfile: docker/dockerfiles/next/Dockerfile
    container_name: next-app
    volumes:
      - ./frontend:/app:delegated
    ports:
      - 7000:7000
    environment:
      - HOST=0.0.0.0
      - PORT=7000
      - CHOKIDAR_USEPOLLING=true
    networks:
      - laravel
    restart: on-failure

#  php:
#    build:
#      context: docker/dockerfiles
#      dockerfile: php/Dockerfile
#    volumes:
#      - ./src:/var/www/laravel

#  composer:
#    build:
#      context: docker
#      dockerfile: dockerfiles/composer/Dockerfile
#    volumes:
#      - ./backend:/var/www

#  artisan:
#    build:
#      context: dockerfiles
#      dockerfile: composer/Dockerfile
#    volumes:
#      - ./src:/var/www/laravel
#    entrypoint: ["Dockerfile", "/var/www/laravel/artisan"]
#


networks:
  laravel:

volumes:
  db_data: